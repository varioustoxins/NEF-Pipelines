# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = nef_pipelines
description = Tools for Manipulating NEF [NMR Exchange Format] Files and Foreign File Access
author = varioustoxins
author_email = g.s.thompson@kent.ac.uk
license = LGPL-2.1
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/varioustoxins/NEF-Pipelines
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    annotated-types==0.6.0
    beautifulsoup4==4.12.3
    cachetools==5.3.3
    click==8.1.3
    f-yeah==0.3.0;python_version<'3.12'
    f-yeah==0.4.0;python_version>='3.12'
    fastaparser==1.1.1
    freezegun==1.1.0
    frozendict==2.3.7
    hjson==3.1.0
    lazy_import==0.2.2
    mmcif-pdbx==2.0.1
    ordered-set==4.1.0
    parse==1.20.1
    pydantic==2.6.3
    pynmrstar==3.3.3
    pyparsing==3.0.8
    pytest==7.1.3
    pytest-mock==3.12.0
    requests==2.31.0
    runstats==2.0.0
    StrEnum==0.4.8
    tabulate==0.8.9
    treelib==1.7.0
    typer==0.7.0
    typing-extensions==4.12.2 ; python_version <= "3.8"
    uncertainties==3.1.7
    urllib3==1.26.15
    wcmatch==8.5
    xmltodict==0.13.0

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install nef_pipelines[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
#    pytest-cov

[options.entry_points]
# Add here console scripts like:
console_scripts =
   nef = nef_pipelines.main:main
# For example:
# console_scripts =
#     fibonacci = nef_pipelines.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
#    --cov nef_pipelines --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
    tests/test_data
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 120
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3.1
package = nef_pipelines
extensions =
    github_actions
    markdown
    no_skeleton
    pre_commit
